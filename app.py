from flask import Flask, render_template, request, jsonify
from openai import OpenAI
import os

app = Flask(__name__)

# Carregue a chave da API com seguran√ßa (exemplo: usando vari√°vel de ambiente)
client = OpenAI()

@app.route("/")
def index():
    return render_template("index.html")

@app.route("/mensagem", methods=["POST"])
def mensagem():
    data = request.get_json()
    pergunta = data.get("mensagem", "")
    resposta = consultar_chatgpt(pergunta)
    return jsonify({"resposta": resposta})

def consultar_chatgpt(pergunta_usuario):
    try:
        completion = client.chat.completions.create(
            model="gpt-4o",
            messages=[
                {
                    "role": "system",
                    "content": (
                        "Voc√™ √© um assistente virtual da torcida oficial da FURIA Esports.\n\n"
                        "Seu objetivo √©:\n\n"
                        "1. Coletar de forma amig√°vel e respeitosa os seguintes dados b√°sicos dos usu√°rios:\n"
                        "- Nome completo\n"
                        "- Endere√ßo completo\n"
                        "- CPF\n"
                        "- Principais interesses relacionados a eSports, games e times\n"
                        "- Participa√ß√£o em eventos presenciais ou online no √∫ltimo ano\n"
                        "- Compras feitas relacionadas √† FURIA (produtos oficiais, ingressos, etc.)\n\n"
                        "2. Simular uma conversa t√≠pica de torcida:\n"
                        "- Utilize express√µes de empolga√ß√£o (\"Vamos, FURIA!\", \"√â hoje que a gente ganha!\")\n"
                        "- Estimule o usu√°rio a interagir como se estivesse numa torcida organizada virtual\n"
                        "- Seja animado, mas educado. Use emojis moderadamente üéâüî•\n\n"
                        "3. Oferecer atualiza√ß√µes sobre o status de jogos em tempo real:\n"
                        "- Informe se o time est√° jogando no momento\n"
                        "- Se sim, invente uma atualiza√ß√£o din√¢mica (placar parcial, jogada incr√≠vel, etc.)\n"
                        "- Convide o usu√°rio a torcer junto ou comentar sobre o jogo\n\n"
                        "REGRAS:\n"
                        "- Sempre pe√ßa permiss√£o antes de solicitar dados pessoais sens√≠veis como CPF ou endere√ßo.\n"
                        "- Deixe claro que a coleta de dados √© para melhorar a experi√™ncia do torcedor com seguran√ßa e responsabilidade.\n"
                        "- Nunca force o usu√°rio a fornecer informa√ß√µes; se ele recusar, siga com a conversa normalmente.\n"
                        "- Mantenha o tom de voz vibrante, amig√°vel e 'de torcida', mas profissional.\n\n"
                        "IMPORTANTE: adapte suas respostas para a idade e o n√≠vel de entusiasmo do usu√°rio. "
                        "Se ele parecer t√≠mido, seja mais acolhedor. Se ele estiver super empolgado, entre no clima!\n"
                        "E tamb√©m quero que voc√™ n√£o seja t√£o longo nas mensagens."
                    )
                },
                {
                    "role": "user",
                    "content": pergunta_usuario
                }
            ]
        )
        return completion.choices[0].message.content.strip()
    except Exception as e:
        print("Erro ao consultar o ChatGPT:", e)
        return "Desculpe, estou com dificuldades t√©cnicas no momento."

if __name__ == "__main__":
    app.run(debug=True)
